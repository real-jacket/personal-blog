<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0"><channel><title>express - 标签 - Xiaomu</title><link>https://blog.realjacket.site/tags/express/</link><description>express - 标签 - Xiaomu</description><generator>Hugo -- gohugo.io</generator><language>zh-CN</language><managingEditor>1762982273@qq.com (xiaomu)</managingEditor><webMaster>1762982273@qq.com (xiaomu)</webMaster><copyright>This work is licensed under a Creative Commons Attribution-NonCommercial 4.0 International License.</copyright><lastBuildDate>Thu, 25 Oct 2018 17:33:04 +0800</lastBuildDate><atom:link href="https://blog.realjacket.site/tags/express/" rel="self" type="application/rss+xml"/><item><title>express 入门</title><link>https://blog.realjacket.site/posts/express-%E5%85%A5%E9%97%A8/</link><pubDate>Thu, 25 Oct 2018 17:33:04 +0800</pubDate><author>xiaomu</author><guid>https://blog.realjacket.site/posts/express-%E5%85%A5%E9%97%A8/</guid><description><![CDATA[<h2 id="什么是-express">什么是 Express？</h2>
<p>官网介绍：Express 是基于 Node.js 平台，快速、开放、极简的 Web 开发框架。
个人理解：我们都知道 node.js 是后端版本的 js 语言实现，自然 Express 更加注重的是后端的处理，它的页面是通过数据与模版渲染而成，注重的是逻辑的交互。与其它常见的前端框架不同，像 Vue、React 等基本思想都是数据驱动视图，我们不必去关注后台是怎么实现的，只注重数据的操作。而 Express 恰恰相反。</p>
<h2 id="写一个-hello-word">写一个 hello word</h2>
<h3 id="安装">安装</h3>
<p>安装 node.js 后，在工作目录下运行一下命令</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span><span class="lnt">4
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl">//通过 npm init 命令为你的应用创建一个 package.json 文件。
</span></span><span class="line"><span class="cl">npm init
</span></span><span class="line"><span class="cl">//安装Express
</span></span><span class="line"><span class="cl">npm install express --save
</span></span></code></pre></td></tr></table>
</div>
</div><h3 id="hello-word">hello word</h3>
<p>创建一个 app.js 文件，内容如下</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span><span class="lnt">4
</span><span class="lnt">5
</span><span class="lnt">6
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-js" data-lang="js"><span class="line"><span class="cl"><span class="kr">const</span> <span class="nx">express</span> <span class="o">=</span> <span class="nx">require</span><span class="p">(</span><span class="s1">&#39;express&#39;</span><span class="p">)</span>
</span></span><span class="line"><span class="cl"><span class="kr">const</span> <span class="nx">app</span> <span class="o">=</span> <span class="nx">express</span><span class="p">()</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="nx">app</span><span class="p">.</span><span class="nx">get</span><span class="p">(</span><span class="s1">&#39;/&#39;</span><span class="p">,</span> <span class="p">(</span><span class="nx">req</span><span class="p">,</span> <span class="nx">res</span><span class="p">)</span> <span class="p">=&gt;</span> <span class="nx">res</span><span class="p">.</span><span class="nx">send</span><span class="p">(</span><span class="s1">&#39;Hello World!&#39;</span><span class="p">))</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="nx">app</span><span class="p">.</span><span class="nx">listen</span><span class="p">(</span><span class="mi">3000</span><span class="p">,</span> <span class="p">()</span> <span class="p">=&gt;</span> <span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="s1">&#39;Example app listening on port 3000!&#39;</span><span class="p">))</span>
</span></span></code></pre></td></tr></table>
</div>
</div><p>然后在在浏览器中打开 http://localhost:3000/，就可以看到网页了，就这么简单。</p>
<h2 id="express-application-generator">Express application generator</h2>
<p>Express 提供给我们一个可以快速创建一个应用的骨架的应用生成器：express-generator。它可以帮助我们快速建立一个网站基本需要的所有文件。</p>
<h3 id="本地安装">本地安装</h3>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl">npm install express-generator
</span></span></code></pre></td></tr></table>
</div>
</div><h3 id="创建应用">创建应用</h3>
<p>通过命令 express -h 可以查看可用的命令参数，其中<code>-f</code>强制在非空目录下创建应用，<code>-v</code>表示 view 的模版引擎。</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span><span class="lnt">4
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl">npx express . -f -e
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">//安装依赖
</span></span><span class="line"><span class="cl">npm install
</span></span></code></pre></td></tr></table>
</div>
</div><p>表示在强制（-f）在当前目录（.）下创建 view=ejs（ -e 模版引擎） 的应用。根目录下会生成下述文件：</p>
<p></p>
<h3 id="基本运行">基本运行</h3>
<p>运行命令</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-js" data-lang="js"><span class="line"><span class="cl"><span class="nx">DEBUG</span><span class="o">=</span><span class="nx">sticky</span><span class="o">-</span><span class="nx">note</span><span class="o">:*</span> <span class="nx">npm</span> <span class="nx">start</span>
</span></span><span class="line"><span class="cl"><span class="c1">//或者直接
</span></span></span><span class="line"><span class="cl"><span class="c1"></span><span class="nx">npm</span> <span class="nx">start</span>
</span></span></code></pre></td></tr></table>
</div>
</div><p>然后在浏览器中打开 http://localhost:3000/ 网址就可以看到这个应用了。</p>
<p>我们在 package.json 文件中可以看到 npm start 是命令 node ./bin/www 的缩写，实际运行了 bin/www 文件，打开 www 文件我们会发现会去运行根目录下的 app.js 文件。
</p>
<p>在 app.js 文件中，重要的如下几行代码：</p>
<p></p>
<p>设置模版引擎与路由跳转，当页面跳转至不同的路由时，运行 router 下对应的文件，获取数据与 view 下的模版结合渲染页面。看看 router 目录下的 index.js 文件，响应的同时，通过 render 函数对数据与模版的结合渲染页面。</p>
<p></p>
<h3 id="express-的-mvc">Express 的 MVC</h3>
<p>我们仔细观察目录会发现，express 具有 MVC 的思想：</p>
<ul>
<li>routes 控制路由的跳转，逻辑行为操作：C</li>
<li>view 是页面的模版，视图：V</li>
<li>应该还有一个获取数据的 model</li>
</ul>
<p>这样看来，结构与思想上都具备 MVC 的思想。</p>
]]></description></item></channel></rss>