<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0"><channel><title>HTTP - 标签 - Xiaomu</title><link>https://blog.realjacket.site/tags/http/</link><description>HTTP - 标签 - Xiaomu</description><generator>Hugo -- gohugo.io</generator><language>zh-CN</language><managingEditor>1762982273@qq.com (xiaomu)</managingEditor><webMaster>1762982273@qq.com (xiaomu)</webMaster><copyright>This work is licensed under a Creative Commons Attribution-NonCommercial 4.0 International License.</copyright><lastBuildDate>Mon, 20 Aug 2018 09:35:58 +0800</lastBuildDate><atom:link href="https://blog.realjacket.site/tags/http/" rel="self" type="application/rss+xml"/><item><title>HTTP入门</title><link>https://blog.realjacket.site/posts/http%E5%85%A5%E9%97%A8/</link><pubDate>Mon, 20 Aug 2018 09:35:58 +0800</pubDate><author>xiaomu</author><guid>https://blog.realjacket.site/posts/http%E5%85%A5%E9%97%A8/</guid><description><![CDATA[<h2 id="基本概念">基本概念</h2>
<h3 id="三个基本概念">三个基本概念</h3>
<ol>
<li>URI：统一资源资源标志符(Uniform Resource Identifier)</li>
<li>HTTP：超文本传输协议(HyperText Transfer Protocal)</li>
<li>HTML：超文本标记语言(HyperText Markup Language)</li>
</ol>
<h3 id="uri">URI</h3>
<p>URI 是一个用于标识某一互联网资源名称的字符串，也就是由某个协议方案表示的资源的定位标识符。
URI 常见的两种形式：</p>
<ul>
<li>URN(Uniform Resource Name):用字符串标识某一互联网资源。ISBN: 9787115275790 就是一个 URN，通过 URN 你可以确定一个「唯一的」资源。</li>
<li>URL(Uniform Resource Locator）：我们一般使用 URL 作为网址，表示资源的地址。https://www.baidu.com/s?wd=hello&amp;rsv_spt=1#5 就是一个 URL，通过 URL 你可以确定一个「唯一的」地址（网址）。
其包括：协议+登录信息（可选）+域名(服务器地址)+服务器端口号+路径+查询字符串+锚点(片段标识符)：
</li>
</ul>
<h3 id="dns">DNS</h3>
<p>DNS（Domain Name System）域名系统，是一种负责域名解析协议，它提供域名到 ip 地址之间的解析服务。
使用命令行 <code>nslookup baiducom</code> 可以看到 baidu.com 的 ip 地址。
使用命令行<code>ping baidu.com</code>命令，可以查看该网址能否联通。</p>
<h2 id="请求与响应">请求与响应</h2>
<h3 id="服务器与浏览器的交互">服务器与浏览器的交互</h3>
<p>Server + Clilent +　 HTTP 协议</p>
<ul>
<li>浏览器负责发起请求</li>
<li>服务器在 80 端口接受内容</li>
<li>服务器返回请求的内容</li>
</ul>
<p>HTTP 协议作用就是指导浏览器与服务器如何进行通信。</p>
<h3 id="http-请求">HTTP 请求</h3>
<p>请求主要由 4 部分组成：</p>
<blockquote>
<p>POST / HTTP/1.1
Host: <a
  href="https://www.baidu.com"
  
  
    
    target="_blank"
  
  
    rel="external nofollow noopener noreffer"
  
  
  
  
>www.baidu.com</a>
User-Agent: curl/7.54.0
Accept: */*
Content-Type: application/x-www-form-urlencoded
Content-Length: 10</p>
</blockquote>
<p>请求的格式：</p>
<blockquote>
<p>1 动词 路径 协议/版本
2 Key1: value1
2 Key2: value2
2 Key3: value3
2 Content-Type: application/x-www-form-urlencoded
2 Content-Length: 10
2 Host: <a
  href="https://www.baidu.com"
  
  
    
    target="_blank"
  
  
    rel="external nofollow noopener noreffer"
  
  
  
  
>www.baidu.com</a>
2 User-Agent: curl/7.54.0
3
4 要上传的数据</p>
</blockquote>
<ol>
<li>第一部分</li>
</ol>
<ul>
<li>动词<code>POST</code>是一种请求方法，常见的请求方法有：GET POST PUT PATCH DELETE HEAD OPTIONS 等。</li>
<li>路径<code>/</code>，包括查询参数，但是不包括锚点。如果没有写路径则默认“/”。</li>
<li><code>HTTP/1.1</code>指的发起请求遵循的协议与协议版本，目前主要使用 HTTP 协议。</li>
</ul>
<ol start="2">
<li>第二部分：
第二部分内容主要是以<code>key:calue</code>的形式。</li>
</ol>
<ul>
<li><code>Host: www.baidu.com</code>表示请求的域名</li>
<li><code>User-Agent: curl/7.54.0</code>表示发起请求使用的软件及版本号</li>
<li><code>Accept: */*</code>表示接收所有</li>
<li><code>Content-Length: 10</code>表示第四部分内容的长度</li>
<li><code>Content-Type: application/x-www-form-urlencoded</code>标注第四部分内容的格式</li>
</ul>
<ol start="3">
<li>第三部分则是一个空行，主要作用分开第二部分与第四部分。</li>
<li>第四部分则是需要上传的数据。</li>
</ol>
<h3 id="http-响应">HTTP 响应</h3>
<p>响应是对请求做出的回应，其内容格式类似请求，也主要由 4 部分组成：</p>
<blockquote>
<p>HTTP/1.1 302 Found
Connection: Keep-Alive
Content-Length: 17931
Content-Type: text/html
Date: Tue, 10 Oct 2017 09:19:47 GMT
Etag: &ldquo;54d9749e-460b&rdquo;
Server: bfe/1.0.8.18</p>
<p>&lt;html&gt;
&lt;head&gt;
&lt;meta http-equiv=&ldquo;content-type&rdquo; content=&ldquo;text/html;charset=utf-8&rdquo;&gt; ……</p>
</blockquote>
<p>响应格式：</p>
<blockquote>
<p>1 协议/版本号 状态码 状态解释
2 Key1: value1
2 Key2: value2
2 Content-Length: 17931
2 Content-Type: text/html
3
4 要下载的内容</p>
</blockquote>
<ol>
<li>第一部分示例：<code>HTTP/1.1 200 OK</code>
<code>200</code>是一个状态码，表示响应的结果状态，后面对应的<code>OK</code>是状态解释。状态码以数字 1、2、3、4、5 开头，分为五种。</li>
<li>第二部分示例：</li>
</ol>
<ul>
<li><code>Connection: Keep-Alive</code></li>
<li><code>Content-Length: 17931</code>响应第四部分内容的长度</li>
<li><code>Content-Type: text/html</code>响应的内容格式</li>
<li><code>Date: Tue, 10 Oct 2017 09:19:47 GMT</code>响应的时间</li>
<li><code>Etag: &quot;54d9749e-460b&quot;</code>响应的标签</li>
<li><code>Server: bfe/1.0.8.18</code>响应的服务器</li>
</ul>
<ol start="3">
<li>第三部分依然是空行，分隔第二部分与第四部分</li>
<li>响应的内容，需要下载的内容</li>
</ol>
<h3 id="使用-chrome-查看请求与响应">使用 chrome 查看请求与响应</h3>
<ol>
<li>打开「Network」</li>
<li>地址栏输入网址</li>
<li>打开开发者工具</li>
<li>在「Network」点击，查看 request，点击「view source」</li>
<li>点击「view source」</li>
<li>点击后可以看到请求的前三部分了</li>
<li>如果有请求的第四部分，那么在「FormData」或「Payload」里面可以看到</li>
</ol>
<h3 id="常见的-http-状态码">常见的 HTTP 状态码</h3>
<ul>
<li>1xx 　 Informational（信息性状态码）　接受的请求正在处理</li>
<li>2xx 　 Success（成功状态码）　请求正常处理完毕
<ul>
<li>200 ok 　表示响应成功，从客户端发来的请求在服务器被正常处理了。</li>
<li>204 No Content 　表示服务器接受的请求已成功处理，但没有资源返回。</li>
<li>206 Partial Conyent 　表示客户端进行了范围请求，服务器成功执行了这部分的 GET 请求。</li>
</ul>
</li>
<li>3xx 　 Redirection（重定向状态码）　需要进行的附加操作以完成请求
<ul>
<li>301 Moved Permanently 　表示永久性重定向，请求的资源已经被分配到新的 URI。</li>
<li>302 Found 　表示临时性重定向，请求的资源被分配了新的 URI，希望用户此次使用新的 URI 访问。</li>
<li>305 Use Proxy 　表示被请求的资源必须通过指定代理才能被访问。</li>
</ul>
</li>
<li>4xx 　 Client Error（客户端错误状态码）　服务器无法处理请求
<ul>
<li>400 Bad Request 　表示请求报文中存在语法错误。</li>
<li>401 Unauthorized 　表示发送的请求需要有通过 HTTP 认证的认证信息。</li>
<li>403 Forbidden 　表示队请求的资源的访问被服务器拒绝了。</li>
<li>404 Not Found 　服务器上无法找到请求的资源。</li>
</ul>
</li>
<li>5xx 　 Server（服务器错误状态码）　服务器处理请求出错
<ul>
<li>500 Internet Server Error 　表示服务器在执行请求时发生错误。</li>
<li>503 Service Unavailable 　表示服务器处于超负载或正在进行停机维护。</li>
</ul>
</li>
</ul>
<h2 id="使用-curl-命令发起请求">使用 curl 命令发起请求</h2>
<p><code>curl -s -v -H &quot;Frank: xxx&quot; -- &quot;https://www.baidu.com&quot;</code>
使用该命令可以创造一个请求，请求访问百度。
<code>curl -X POST -s -v -H &quot;Frank: xxx&quot; -- &quot;https://www.baidu.com&quot;</code>
新增的<code>-X POST</code>表示请求的方法为 POST，没有这个则默认 GET。
<code>curl -X POST -d &quot;1234567890&quot; -s -v -H &quot;Frank: xxx&quot; -- &quot;https://www.baidu.com&quot;</code>
新增的 <code>-d &quot;1234567890&quot;</code>d 表示 date 数据，表示上传了引号中的数据。</p>
]]></description></item></channel></rss>