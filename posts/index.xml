<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0"><channel><title>所有文章 - Xiaomu</title><link>https://real-jacket.github.io/posts/</link><description>所有文章 | Xiaomu</description><generator>Hugo -- gohugo.io</generator><language>zh-CN</language><managingEditor>1762982273@qq.com (xiaomu)</managingEditor><webMaster>1762982273@qq.com (xiaomu)</webMaster><copyright>This work is licensed under a Creative Commons Attribution-NonCommercial 4.0 International License.</copyright><lastBuildDate>Fri, 13 May 2022 21:20:38 +0800</lastBuildDate><atom:link href="https://real-jacket.github.io/posts/" rel="self" type="application/rss+xml"/><item><title>浅谈HTNL常用标签</title><link>https://real-jacket.github.io/posts/%E6%B5%85%E8%B0%88htnl%E5%B8%B8%E7%94%A8%E6%A0%87%E7%AD%BE/</link><pubDate>Thu, 05 Jul 2018 17:39:41 +0000</pubDate><author>xiaomu</author><guid>https://real-jacket.github.io/posts/%E6%B5%85%E8%B0%88htnl%E5%B8%B8%E7%94%A8%E6%A0%87%E7%AD%BE/</guid><description>HTML 常用标签 HTML 常用标签有：a、form、input、button、h1、p、ul、ol、small、strong、div、span、kbd、v</description></item><item><title>js中的数据类型</title><link>https://real-jacket.github.io/posts/js%E4%B8%AD%E7%9A%84%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B/</link><pubDate>Sat, 21 Jul 2018 18:44:57 +0000</pubDate><author>xiaomu</author><guid>https://real-jacket.github.io/posts/js%E4%B8%AD%E7%9A%84%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B/</guid><description>JS 中的数据类型一共有 7 种： 基本类型（简单类型）：数值（number）、字符串（string）、布尔值（boolean）、Symbol（ES6</description></item><item><title>js中的数据类型转换</title><link>https://real-jacket.github.io/posts/js%E4%B8%AD%E7%9A%84%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B%E8%BD%AC%E6%8D%A2/</link><pubDate>Tue, 24 Jul 2018 17:41:31 +0000</pubDate><author>xiaomu</author><guid>https://real-jacket.github.io/posts/js%E4%B8%AD%E7%9A%84%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B%E8%BD%AC%E6%8D%A2/</guid><description>js 中有 6 个基本数据类型：number、string、boolean、Symbol、null、undefined 与一个复杂的数据类型 objec</description></item><item><title>在deepin中安装node与npm</title><link>https://real-jacket.github.io/posts/%E5%9C%A8deepin%E4%B8%AD%E5%AE%89%E8%A3%85node%E4%B8%8Enpm/</link><pubDate>Thu, 16 Aug 2018 11:28:26 +0000</pubDate><author>xiaomu</author><guid>https://real-jacket.github.io/posts/%E5%9C%A8deepin%E4%B8%AD%E5%AE%89%E8%A3%85node%E4%B8%8Enpm/</guid><description>最近装了 deepin15.6，想安装 http-server 服务，结果报错，原来是 npm 版本太老，以下罗列几种 node 安装方式，这几种方式适用 Linux/ubantu/deepin 系统。 1、官方途径：通过包管</description></item><item><title>HTTP入门</title><link>https://real-jacket.github.io/posts/http%E5%85%A5%E9%97%A8/</link><pubDate>Mon, 20 Aug 2018 09:35:58 +0000</pubDate><author>xiaomu</author><guid>https://real-jacket.github.io/posts/http%E5%85%A5%E9%97%A8/</guid><description>基本概念 三个基本概念 URI：统一资源资源标志符(Uniform Resource Identifier) HTTP：超文本传输协议(HyperText Transfer Protocal) HTML：超文本标记语言(</description></item><item><title>会动的简历总结</title><link>https://real-jacket.github.io/posts/%E4%BC%9A%E5%8A%A8%E7%9A%84%E7%AE%80%E5%8E%86%E6%80%BB%E7%BB%93/</link><pubDate>Sat, 25 Aug 2018 10:53:36 +0000</pubDate><author>xiaomu</author><guid>https://real-jacket.github.io/posts/%E4%BC%9A%E5%8A%A8%E7%9A%84%E7%AE%80%E5%8E%86%E6%80%BB%E7%BB%93/</guid><description>简介 该简历是利用基础知识制作，主要涉及的知识点： pre标签的使用 per标签会在页面中呈现你写的内容，包括空格与换行。 pre内的标签会被当成h</description></item><item><title>初识脚本</title><link>https://real-jacket.github.io/posts/%E4%BB%80%E4%B9%88%E6%98%AF%E8%84%9A%E6%9C%AC/</link><pubDate>Tue, 04 Sep 2018 16:09:06 +0000</pubDate><author>xiaomu</author><guid>https://real-jacket.github.io/posts/%E4%BB%80%E4%B9%88%E6%98%AF%E8%84%9A%E6%9C%AC/</guid><description>什么是脚本 类似于话剧中的剧本，脚本是计算机的“剧本”，脚本即给计算机一行一行执行的文本。 用不同的语言写脚本，有不同的语法。bash 脚本有 bash 脚</description></item><item><title>JS之数组</title><link>https://real-jacket.github.io/posts/js%E4%B9%8B%E6%95%B0%E7%BB%84/</link><pubDate>Sat, 15 Sep 2018 10:53:30 +0000</pubDate><author>xiaomu</author><guid>https://real-jacket.github.io/posts/js%E4%B9%8B%E6%95%B0%E7%BB%84/</guid><description>Array 定义 数组是按次序排列的一组值，每个值都有一个下标，按顺序从零开始。 数组自带一个属性 length，表示数组的长度即有多少个值，其数值为最后一</description></item><item><title>express 入门</title><link>https://real-jacket.github.io/posts/express-%E5%85%A5%E9%97%A8/</link><pubDate>Thu, 25 Oct 2018 17:33:04 +0000</pubDate><author>xiaomu</author><guid>https://real-jacket.github.io/posts/express-%E5%85%A5%E9%97%A8/</guid><description>什么是 Express？ 官网介绍：Express 是基于 Node.js 平台，快速、开放、极简的 Web 开发框架。 个人理解：我们都知道 node.js 是后端版本的 js 语言实现，自然</description></item><item><title>vscode 快捷操作</title><link>https://real-jacket.github.io/posts/vscode-%E5%BF%AB%E6%8D%B7%E6%93%8D%E4%BD%9C/</link><pubDate>Tue, 18 Dec 2018 21:21:46 +0000</pubDate><author>xiaomu</author><guid>https://real-jacket.github.io/posts/vscode-%E5%BF%AB%E6%8D%B7%E6%93%8D%E4%BD%9C/</guid><description><![CDATA[命令行使用 vs code 命令查找：Ctrl + Shift + P/Cmd + Shift + P code + &lt;filename&gt;/&lt;filepath&gt; 打开文件或者文件目录 参数 作用 注意项 -r 在同一窗口打开 会删掉原有工作区，只保留一个 -g &lt; file:line[character] &gt;]]></description></item><item><title>hexo 博客转移</title><link>https://real-jacket.github.io/posts/hexo-%E5%8D%9A%E5%AE%A2%E8%BD%AC%E7%A7%BB/</link><pubDate>Wed, 02 Jan 2019 10:11:24 +0000</pubDate><author>xiaomu</author><guid>https://real-jacket.github.io/posts/hexo-%E5%8D%9A%E5%AE%A2%E8%BD%AC%E7%A7%BB/</guid><description>最近觉得 window 下的命令行实在难看，即使是 gitbash 也无法拯救，毕竟一些乱码着实是要逼死我这种强迫症。于是下定决心，将笔记本里的另一个 linux 系统 deepin 作为主力系统</description></item><item><title>建一个本地mongdb数据库</title><link>https://real-jacket.github.io/posts/%E5%BB%BA%E4%B8%80%E4%B8%AA%E6%9C%AC%E5%9C%B0mongdb%E6%95%B0%E6%8D%AE%E5%BA%93/</link><pubDate>Wed, 09 Jan 2019 11:55:02 +0000</pubDate><author>xiaomu</author><guid>https://real-jacket.github.io/posts/%E5%BB%BA%E4%B8%80%E4%B8%AA%E6%9C%AC%E5%9C%B0mongdb%E6%95%B0%E6%8D%AE%E5%BA%93/</guid><description>安装 mongodb 数据库 安装包安装 进入官网，点击左上角 Get MongoDB 下载，进入中间的 server 界面，会自动匹配出对应的系统，下载对应的安装包，安装即可。 如果想看更详细的安</description></item><item><title>V8 垃圾回收</title><link>https://real-jacket.github.io/posts/v8-%E5%9E%83%E5%9C%BE%E5%9B%9E%E6%94%B6/</link><pubDate>Sun, 27 Mar 2022 14:51:37 +0800</pubDate><author>xiaomu</author><guid>https://real-jacket.github.io/posts/v8-%E5%9E%83%E5%9C%BE%E5%9B%9E%E6%94%B6/</guid><description>什么是垃圾回收 js 中基本类型是储存在栈空间里的，复杂类型是储存在堆空间里，同时栈空间里保存这对它的引用。这是数据的储存方式，如果这些数据被使用</description></item><item><title>oh my zsh！你的命令行让人不敢相信</title><link>https://real-jacket.github.io/posts/oh-my-zsh%E4%BD%A0%E7%9A%84%E5%91%BD%E4%BB%A4%E8%A1%8C%E8%AE%A9%E4%BA%BA%E4%B8%8D%E6%95%A2%E7%9B%B8%E4%BF%A1/</link><pubDate>Sun, 27 Mar 2022 15:21:39 +0800</pubDate><author>xiaomu</author><guid>https://real-jacket.github.io/posts/oh-my-zsh%E4%BD%A0%E7%9A%84%E5%91%BD%E4%BB%A4%E8%A1%8C%E8%AE%A9%E4%BA%BA%E4%B8%8D%E6%95%A2%E7%9B%B8%E4%BF%A1/</guid><description>前置条件 zsh 只支持 类unix系统，不支持windows，windows用户想要体验，请在WSL中尝试！ 安装 zsh安装 首先安装 Z shell，通过</description></item><item><title>Http缓存</title><link>https://real-jacket.github.io/posts/index.zh/</link><pubDate>Fri, 13 May 2022 21:20:38 +0800</pubDate><author>xiaomu</author><guid>https://real-jacket.github.io/posts/index.zh/</guid><description>什么是缓存 通过复用以前获取的资源，可以显著提高网站和应用程序的性能。Web 缓存减少了等待时间和网络流量，因此减少了显示资源表示形式所需的时间</description></item><item><title>Event Loop事件循环，GET！</title><link>https://real-jacket.github.io/posts/event-loop%E4%BA%8B%E4%BB%B6%E5%BE%AA%E7%8E%AFget/</link><pubDate>Mon, 29 Oct 2018 21:14:06 +0000</pubDate><author>xiaomu</author><guid>https://real-jacket.github.io/posts/event-loop%E4%BA%8B%E4%BB%B6%E5%BE%AA%E7%8E%AFget/</guid><description>JS 中比较让人头疼的问题之一要算异步事件了，比如我们经常要等后台返回数据后进行 dom 操作，又比如我们要设置一个定时器完成特定的要求。在这些同步与异</description></item><item><title>Event Loop事件循环，GET！</title><link>https://real-jacket.github.io/posts/event-loop%E4%BA%8B%E4%BB%B6%E5%BE%AA%E7%8E%AFget/</link><pubDate>Mon, 29 Oct 2018 21:14:06 +0000</pubDate><author>xiaomu</author><guid>https://real-jacket.github.io/posts/event-loop%E4%BA%8B%E4%BB%B6%E5%BE%AA%E7%8E%AFget/</guid><description>JS 中比较让人头疼的问题之一要算异步事件了，比如我们经常要等后台返回数据后进行 dom 操作，又比如我们要设置一个定时器完成特定的要求。在这些同步与异</description></item><item><title>Http缓存</title><link>https://real-jacket.github.io/posts/index.zh/</link><pubDate>Fri, 13 May 2022 21:20:38 +0800</pubDate><author>xiaomu</author><guid>https://real-jacket.github.io/posts/index.zh/</guid><description>什么是缓存 通过复用以前获取的资源，可以显著提高网站和应用程序的性能。Web 缓存减少了等待时间和网络流量，因此减少了显示资源表示形式所需的时间</description></item><item><title>oh my zsh！你的命令行让人不敢相信</title><link>https://real-jacket.github.io/posts/oh-my-zsh%E4%BD%A0%E7%9A%84%E5%91%BD%E4%BB%A4%E8%A1%8C%E8%AE%A9%E4%BA%BA%E4%B8%8D%E6%95%A2%E7%9B%B8%E4%BF%A1/</link><pubDate>Sun, 27 Mar 2022 15:21:39 +0800</pubDate><author>xiaomu</author><guid>https://real-jacket.github.io/posts/oh-my-zsh%E4%BD%A0%E7%9A%84%E5%91%BD%E4%BB%A4%E8%A1%8C%E8%AE%A9%E4%BA%BA%E4%B8%8D%E6%95%A2%E7%9B%B8%E4%BF%A1/</guid><description>前置条件 zsh 只支持 类unix系统，不支持windows，windows用户想要体验，请在WSL中尝试！ 安装 zsh安装 首先安装 Z shell，通过</description></item><item><title>V8 垃圾回收</title><link>https://real-jacket.github.io/posts/v8-%E5%9E%83%E5%9C%BE%E5%9B%9E%E6%94%B6/</link><pubDate>Sun, 27 Mar 2022 14:51:37 +0800</pubDate><author>xiaomu</author><guid>https://real-jacket.github.io/posts/v8-%E5%9E%83%E5%9C%BE%E5%9B%9E%E6%94%B6/</guid><description>什么是垃圾回收 js 中基本类型是储存在栈空间里的，复杂类型是储存在堆空间里，同时栈空间里保存这对它的引用。这是数据的储存方式，如果这些数据被使用</description></item><item><title>关于斐波那契数列</title><link>https://real-jacket.github.io/posts/%E5%85%B3%E4%BA%8E%E6%96%90%E6%B3%A2%E9%82%A3%E5%A5%91%E6%95%B0%E5%88%97/</link><pubDate>Tue, 08 Sep 2020 14:20:41 +0800</pubDate><author>xiaomu</author><guid>https://real-jacket.github.io/posts/%E5%85%B3%E4%BA%8E%E6%96%90%E6%B3%A2%E9%82%A3%E5%A5%91%E6%95%B0%E5%88%97/</guid><description>关于斐波那契数列 斐波那契数列 JS 实现 1 2 3 4 5 6 7 8 // n 默认为大于零的整数 function fib(n) { if (n &amp;lt; 2) { return n } else { return fib(n - 2) + fib(n - 1) } } 斐波那契数列函数的实现</description></item><item><title>关于this的一道面试题</title><link>https://real-jacket.github.io/posts/%E5%85%B3%E4%BA%8Ethis%E7%9A%84%E4%B8%80%E9%81%93%E9%9D%A2%E8%AF%95%E9%A2%98/</link><pubDate>Wed, 02 Sep 2020 12:32:41 +0800</pubDate><author>xiaomu</author><guid>https://real-jacket.github.io/posts/%E5%85%B3%E4%BA%8Ethis%E7%9A%84%E4%B8%80%E9%81%93%E9%9D%A2%E8%AF%95%E9%A2%98/</guid><description>关于 this 的一道面试题 问题 首先贴代码： 1 2 3 4 5 6 7 8 9 10 11 12 13 let length = 10 function fn() { console.log(this.length) } let obj = { length: 5, method(fn) { fn() arguments[0]() }, } obj.method(fn, 1) 请问最后打印出什么？ 第一个 fn() 不确定</description></item><item><title>Node 海报功能实践</title><link>https://real-jacket.github.io/posts/node-%E6%B5%B7%E6%8A%A5%E5%8A%9F%E8%83%BD%E5%AE%9E%E8%B7%B5/</link><pubDate>Thu, 20 Aug 2020 15:13:42 +0800</pubDate><author>xiaomu</author><guid>https://real-jacket.github.io/posts/node-%E6%B5%B7%E6%8A%A5%E5%8A%9F%E8%83%BD%E5%AE%9E%E8%B7%B5/</guid><description>Node 海报分享实践 最近做了一个 wx 的 node 端海报分享功能，记录一下其中功能的实现，实现一个 express 路由。 使用技术 node-canvas: 主要用来绘制文字内容。 canvas-multiline-text: 一个用于绘制多行文</description></item><item><title>建一个本地mongdb数据库</title><link>https://real-jacket.github.io/posts/%E5%BB%BA%E4%B8%80%E4%B8%AA%E6%9C%AC%E5%9C%B0mongdb%E6%95%B0%E6%8D%AE%E5%BA%93/</link><pubDate>Wed, 09 Jan 2019 11:55:02 +0000</pubDate><author>xiaomu</author><guid>https://real-jacket.github.io/posts/%E5%BB%BA%E4%B8%80%E4%B8%AA%E6%9C%AC%E5%9C%B0mongdb%E6%95%B0%E6%8D%AE%E5%BA%93/</guid><description>安装 mongodb 数据库 安装包安装 进入官网，点击左上角 Get MongoDB 下载，进入中间的 server 界面，会自动匹配出对应的系统，下载对应的安装包，安装即可。 如果想看更详细的安</description></item><item><title>hexo 博客转移</title><link>https://real-jacket.github.io/posts/hexo-%E5%8D%9A%E5%AE%A2%E8%BD%AC%E7%A7%BB/</link><pubDate>Wed, 02 Jan 2019 10:11:24 +0000</pubDate><author>xiaomu</author><guid>https://real-jacket.github.io/posts/hexo-%E5%8D%9A%E5%AE%A2%E8%BD%AC%E7%A7%BB/</guid><description>最近觉得 window 下的命令行实在难看，即使是 gitbash 也无法拯救，毕竟一些乱码着实是要逼死我这种强迫症。于是下定决心，将笔记本里的另一个 linux 系统 deepin 作为主力系统</description></item><item><title>vscode 快捷操作</title><link>https://real-jacket.github.io/posts/vscode-%E5%BF%AB%E6%8D%B7%E6%93%8D%E4%BD%9C/</link><pubDate>Tue, 18 Dec 2018 21:21:46 +0000</pubDate><author>xiaomu</author><guid>https://real-jacket.github.io/posts/vscode-%E5%BF%AB%E6%8D%B7%E6%93%8D%E4%BD%9C/</guid><description><![CDATA[命令行使用 vs code 命令查找：Ctrl + Shift + P/Cmd + Shift + P code + &lt;filename&gt;/&lt;filepath&gt; 打开文件或者文件目录 参数 作用 注意项 -r 在同一窗口打开 会删掉原有工作区，只保留一个 -g &lt; file:line[character] &gt;]]></description></item></channel></rss>